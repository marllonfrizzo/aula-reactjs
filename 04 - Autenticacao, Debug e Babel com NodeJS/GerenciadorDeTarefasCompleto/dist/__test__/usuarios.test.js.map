{"version":3,"sources":["../../__test__/usuarios.test.js"],"names":["describe","test","done","sync","force","then","post","send","expect","response","body","toEqual","objectContaining","id","any","Number","nome","String","catch","ex"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAEAA,SAAS,2BAAT,EAAsC,YAAY;AAC9CC,SAAK,sBAAL,EAA6B,UAAUC,IAAV,EAAgB;;AAEzC,eAAO,kBAAUC,IAAV,CAAe,EAAEC,OAAO,IAAT,EAAf,EACFC,IADE,CACG,YAAM;;AAER,mBAAO,wCACFC,IADE,CACG,eADH,EAEFC,IAFE,CAEG;AACF,wBAAQ,gBADN;AAEF,yBAAS,mBAFP;AAGF,8BAAc,YAHZ;AAIF,yBAAS,UAJP;AAKF,uBAAO;AALL,aAFH,EASFC,MATE,CASK,GATL,EAUFH,IAVE,CAUG,oBAAY;AACdG,uBAAOC,SAASC,IAAhB,EAAsBC,OAAtB,CACIH,OAAOI,gBAAP,CAAwB;AACpBC,wBAAIL,OAAOM,GAAP,CAAWC,MAAX,CADgB;AAEpBC,0BAAMR,OAAOM,GAAP,CAAWG,MAAX;AAFc,iBAAxB,CADJ;AAMAf;AACH,aAlBE,CAAP;AAoBH,SAvBE,EAuBAgB,KAvBA,CAuBM,cAAM;AACXhB,iBAAKiB,EAAL;AACH,SAzBE,CAAP;AA2BH,KA7BD;AA8BH,CA/BD","file":"usuarios.test.js","sourcesContent":["import request from 'supertest';\nimport app from '../src/app';\nimport { sequelize } from '../src/models';\n\ndescribe('Testando rotas do usuário', function () {\n    test('Cadastro de usuário.', function (done) {\n\n        return sequelize.sync({ force: true })\n            .then(() => {\n\n                return request(app)\n                    .post('/api/usuarios')\n                    .send({\n                        \"nome\": \"Douglas Junior\",\n                        \"email\": \"douglas2@mail.com\",\n                        \"nascimento\": \"1989-05-17\",\n                        \"senha\": \"senha123\",\n                        \"cpf\": \"12345678901\"\n                    })\n                    .expect(201)\n                    .then(response => {\n                        expect(response.body).toEqual(\n                            expect.objectContaining({\n                                id: expect.any(Number),\n                                nome: expect.any(String),\n                            })\n                        );\n                        done();\n                    })\n\n            }).catch(ex => {\n                done(ex);\n            })\n\n    })\n})\n\n\n"]}