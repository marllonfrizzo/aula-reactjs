{"version":3,"sources":["../../src/app.js"],"names":["app","use","credentials","origin","json","urlencoded","extended","customValidators","static","join","__dirname","req","res","next","sendFile","resolve","err","console","error","status","message","get","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQ,oBAAK,EAAEC,aAAa,IAAf,EAAqBC,QAAQ,IAA7B,EAAL,CAAR;AACAH,IAAIC,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAD,IAAIC,GAAJ,CAAQ,qBAAWG,IAAX,EAAR;AACAJ,IAAIC,GAAJ,CAAQ,qBAAWI,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAN,IAAIC,GAAJ,CAAQ,6BAAR;AACAD,IAAIC,GAAJ,CAAQ,gCAAiB,EAAEM,6CAAF,EAAjB,CAAR;AACAP,IAAIC,GAAJ,CAAQ,kBAAQO,MAAR,CAAe,eAAKC,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR;;AAEA,sBAAWV,GAAX,EAAgB,MAAhB;;AAEA;AACAA,IAAIC,GAAJ,CAAQ,UAACU,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,QAAIE,QAAJ,CAAa,eAAKC,OAAL,CAAaL,SAAb,EAAwB,IAAxB,EAA8B,QAA9B,EAAwC,YAAxC,CAAb;AACH,CAFD;;AAIA;AACAV,IAAIC,GAAJ,CAAQ,UAACe,GAAD,EAAML,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC7BI,YAAQC,KAAR,CAAcF,GAAd;AACAJ,QAAIO,MAAJ,CAAWH,IAAIG,MAAJ,IAAc,GAAzB,EACKf,IADL,CACU;AACFgB,iBAASJ,IAAII,OADX;AAEFF,eAAOP,IAAIX,GAAJ,CAAQqB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCL,GAAvC,GAA6C;AAFlD,KADV;AAKH,CAPD;;AASAM,OAAOC,OAAP,GAAiBvB,GAAjB","file":"app.js","sourcesContent":["import express from 'express';\nimport cors from 'cors';\nimport expressValidator from 'express-validator';\nimport path from 'path';\nimport logger from 'morgan';\nimport cookieParser from 'cookie-parser';\nimport bodyParser from 'body-parser';\n\nimport { customValidators } from './utils/Validator';\nimport loadRoutes from './routes/';\n\nconst app = express();\n\napp.use(cors({ credentials: true, origin: true }));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(expressValidator({ customValidators: customValidators }));\napp.use(express.static(path.join(__dirname, '../public')));\n\nloadRoutes(app, '/api');\n\n// catch 404 and forward to error handler\napp.use((req, res, next) => {\n    res.sendFile(path.resolve(__dirname, '..', 'public', 'index.html'));\n});\n\n// error handler\napp.use((err, req, res, next) => {\n    console.error(err);\n    res.status(err.status || 500)\n        .json({\n            message: err.message,\n            error: req.app.get('env') === 'development' ? err : {}\n        });\n});\n\nmodule.exports = app;\n"]}