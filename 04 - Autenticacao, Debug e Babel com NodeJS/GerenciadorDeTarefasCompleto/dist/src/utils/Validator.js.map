{"version":3,"sources":["../../../src/utils/Validator.js"],"names":["createValidator","schema","req","res","next","check","getValidationResult","then","result","isEmpty","status","json","array","catch","ex","customValidators","isDate","strDate","format","isValid","isCPF","cpf","replace","length"],"mappings":";;;;;;;AAAA;;;;AACA;;AACA;;;;;;AAEA;;;;;;AAMO,IAAMA,4CAAkB,SAAlBA,eAAkB,CAACC,MAAD;AAAA,WAAY,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3DF,YAAIG,KAAJ,CAAUJ,MAAV;AACAC,YAAII,mBAAJ,GACKC,IADL,CACU,kBAAU;AACZ,gBAAIC,OAAOC,OAAP,OAAqB,IAAzB,EAA+B;AAC3BN,oBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,OAAOI,KAAP,EAArB;AACA;AACH;AACDR;AACH,SAPL,EAQKS,KARL,CAQW,cAAM;AACTT,iBAAKU,EAAL;AACH,SAVL;AAWH,KAb8B;AAAA,CAAxB;;AAeP;;;AAGO,IAAMC,8CAAmB;AAC5BC,YAAQ,gBAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC/B,eAAO,sBAAOD,OAAP,EAAgBC,MAAhB,EAAwB,IAAxB,EAA8BC,OAA9B,EAAP;AACH,KAH2B;AAI5BC,WAAO,eAAUC,GAAV,EAAe;AAClB,eAAOA,OAAOA,IAAIC,OAAJ,CAAY,SAAZ,EAAuB,EAAvB,EAA2BC,MAA3B,KAAsC,EAApD;AACH;AAN2B,CAAzB","file":"Validator.js","sourcesContent":["import express from 'express';\nimport { ValidatorFunctionRegExp } from 'express-validator';\nimport moment from 'moment';\n\n/**\n * Cria um middleware para validação do conteúdo da requisição baseado em esquema.\n * \n * @param {ValidatorFunctionRegExp} schema\n * @return {express.RequestHandler} middleware\n */\nexport const createValidator = (schema) => (req, res, next) => {\n    req.check(schema);\n    req.getValidationResult()\n        .then(result => {\n            if (result.isEmpty() !== true) {\n                res.status(422).json(result.array());\n                return;\n            }\n            next();\n        })\n        .catch(ex => {\n            next(ex);\n        });\n}\n\n/**\n * Define validadores customizados.\n */\nexport const customValidators = {\n    isDate: function (strDate, format) {\n        return moment(strDate, format, true).isValid();\n    },\n    isCPF: function (cpf) {\n        return cpf && cpf.replace(/[^0-9]/g, '').length === 11;\n    }\n}\n\n"]}