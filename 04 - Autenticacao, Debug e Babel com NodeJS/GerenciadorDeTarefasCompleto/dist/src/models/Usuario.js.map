{"version":3,"sources":["../../../src/models/Usuario.js"],"names":["module","exports","sequelize","DataTypes","Usuario","define","id","primaryKey","autoIncrement","type","BIGINT","nome","allowNull","STRING","email","unique","cpf","senha","BLOB","nascimento","DATEONLY","defaultScope","attributes","exclude","associate","models","Tarefa","hasMany","onDelete","onUpdate"],"mappings":";;AAAA;;;;;;AAEA;;;;;AAKAA,OAAOC,OAAP,GAAiB,UAAUC,SAAV,EAAqBC,SAArB,EAAgC;AAC7C,QAAMC,UAAUF,UAAUG,MAAV,CAAiB,SAAjB,EAA4B;AACxCC,YAAI;AACAC,wBAAY,IADZ;AAEAC,2BAAe,IAFf;AAGAC,kBAAMN,UAAUO;AAHhB,SADoC;AAMxCC,cAAM;AACFC,uBAAW,KADT;AAEFH,kBAAMN,UAAUU,MAAV,CAAiB,GAAjB;AAFJ,SANkC;AAUxCC,eAAO;AACHF,uBAAW,KADR;AAEHG,oBAAQ,IAFL;AAGHN,kBAAMN,UAAUU,MAAV,CAAiB,GAAjB;AAHH,SAViC;AAexCG,aAAK;AACDJ,uBAAW,KADV;AAEDG,oBAAQ,IAFP;AAGDN,kBAAMN,UAAUU,MAAV,CAAiB,EAAjB;AAHL,SAfmC;AAoBxCI,eAAO;AACHL,uBAAW,KADR;AAEHH,kBAAMN,UAAUe;AAFb,SApBiC;AAwBxCC,oBAAYhB,UAAUiB;AAxBkB,KAA5B,EAyBb;AACKC,sBAAc;AACVC,wBAAY;AACRC,yBAAS,CAAC,OAAD,CADD,CACW;AADX;AADF;AADnB,KAzBa,CAAhB;;AAkCA;;;AAGAnB,YAAQoB,SAAR,GAAoB,UAACC,MAAD,EAAY;AAAA,YACpBC,MADoB,GACTD,MADS,CACpBC,MADoB;;AAG5B;;AACAtB,gBAAQuB,OAAR,CAAgBD,MAAhB,EAAwB;AACpBE,sBAAU,WADU;AAEpBC,sBAAU;AAFU,SAAxB;AAIH,KARD;;AAUA,WAAOzB,OAAP;AACH,CAjDD","file":"Usuario.js","sourcesContent":["import Sequelize from 'sequelize';\n\n/**\n * @param {Sequelize.Sequelize} sequelize \n * @param {Sequelize.DataTypes} DataTypes \n * @return {Sequelize.Model}\n */\nmodule.exports = function (sequelize, DataTypes) {\n    const Usuario = sequelize.define('usuario', {\n        id: {\n            primaryKey: true,\n            autoIncrement: true,\n            type: DataTypes.BIGINT,\n        },\n        nome: {\n            allowNull: false,\n            type: DataTypes.STRING(200),\n        },\n        email: {\n            allowNull: false,\n            unique: true,\n            type: DataTypes.STRING(150),\n        },\n        cpf: {\n            allowNull: false,\n            unique: true,\n            type: DataTypes.STRING(11),\n        },\n        senha: {\n            allowNull: false,\n            type: DataTypes.BLOB,\n        },\n        nascimento: DataTypes.DATEONLY,\n    }, {\n            defaultScope: {\n                attributes: {\n                    exclude: ['senha'] // por padrão, exclui a senha do resultados das consultas\n                }\n            },\n        }\n    );\n\n    /**\n     * @param {Object.<string, Sequelize.Model>} models\n     */\n    Usuario.associate = (models) => {\n        const { Tarefa } = models;\n\n        // Define a associação de um usuário para muitas tarefas\n        Usuario.hasMany(Tarefa, {\n            onDelete: 'NO ACTION',\n            onUpdate: 'NO ACTION',\n        })\n    }\n\n    return Usuario;\n}"]}